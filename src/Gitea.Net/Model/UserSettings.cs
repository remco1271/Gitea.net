/*
 * Gitea API
 *
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.22.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Gitea.Net.Client.OpenAPIDateConverter;

namespace Gitea.Net.Model
{
    /// <summary>
    /// UserSettings represents user settings
    /// </summary>
    [DataContract(Name = "UserSettings")]
    public partial class UserSettings : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UserSettings" /> class.
        /// </summary>
        /// <param name="description">description.</param>
        /// <param name="diffViewStyle">diffViewStyle.</param>
        /// <param name="fullName">fullName.</param>
        /// <param name="hideActivity">hideActivity.</param>
        /// <param name="hideEmail">Privacy.</param>
        /// <param name="language">language.</param>
        /// <param name="location">location.</param>
        /// <param name="theme">theme.</param>
        /// <param name="website">website.</param>
        public UserSettings(string description = default(string), string diffViewStyle = default(string), string fullName = default(string), bool hideActivity = default(bool), bool hideEmail = default(bool), string language = default(string), string location = default(string), string theme = default(string), string website = default(string))
        {
            this.Description = description;
            this.DiffViewStyle = diffViewStyle;
            this.FullName = fullName;
            this.HideActivity = hideActivity;
            this.HideEmail = hideEmail;
            this.Language = language;
            this.Location = location;
            this.Theme = theme;
            this.Website = website;
        }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name = "description", EmitDefaultValue = false)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets DiffViewStyle
        /// </summary>
        [DataMember(Name = "diff_view_style", EmitDefaultValue = false)]
        public string DiffViewStyle { get; set; }

        /// <summary>
        /// Gets or Sets FullName
        /// </summary>
        [DataMember(Name = "full_name", EmitDefaultValue = false)]
        public string FullName { get; set; }

        /// <summary>
        /// Gets or Sets HideActivity
        /// </summary>
        [DataMember(Name = "hide_activity", EmitDefaultValue = true)]
        public bool HideActivity { get; set; }

        /// <summary>
        /// Privacy
        /// </summary>
        /// <value>Privacy</value>
        [DataMember(Name = "hide_email", EmitDefaultValue = true)]
        public bool HideEmail { get; set; }

        /// <summary>
        /// Gets or Sets Language
        /// </summary>
        [DataMember(Name = "language", EmitDefaultValue = false)]
        public string Language { get; set; }

        /// <summary>
        /// Gets or Sets Location
        /// </summary>
        [DataMember(Name = "location", EmitDefaultValue = false)]
        public string Location { get; set; }

        /// <summary>
        /// Gets or Sets Theme
        /// </summary>
        [DataMember(Name = "theme", EmitDefaultValue = false)]
        public string Theme { get; set; }

        /// <summary>
        /// Gets or Sets Website
        /// </summary>
        [DataMember(Name = "website", EmitDefaultValue = false)]
        public string Website { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class UserSettings {\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  DiffViewStyle: ").Append(DiffViewStyle).Append("\n");
            sb.Append("  FullName: ").Append(FullName).Append("\n");
            sb.Append("  HideActivity: ").Append(HideActivity).Append("\n");
            sb.Append("  HideEmail: ").Append(HideEmail).Append("\n");
            sb.Append("  Language: ").Append(Language).Append("\n");
            sb.Append("  Location: ").Append(Location).Append("\n");
            sb.Append("  Theme: ").Append(Theme).Append("\n");
            sb.Append("  Website: ").Append(Website).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
