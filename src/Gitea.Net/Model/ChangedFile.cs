/*
 * Gitea API
 *
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.22.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Gitea.Net.Client.OpenAPIDateConverter;

namespace Gitea.Net.Model
{
    /// <summary>
    /// ChangedFile store information about files affected by the pull request
    /// </summary>
    [DataContract(Name = "ChangedFile")]
    public partial class ChangedFile : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ChangedFile" /> class.
        /// </summary>
        /// <param name="additions">additions.</param>
        /// <param name="changes">changes.</param>
        /// <param name="contentsUrl">contentsUrl.</param>
        /// <param name="deletions">deletions.</param>
        /// <param name="filename">filename.</param>
        /// <param name="htmlUrl">htmlUrl.</param>
        /// <param name="previousFilename">previousFilename.</param>
        /// <param name="rawUrl">rawUrl.</param>
        /// <param name="status">status.</param>
        public ChangedFile(long additions = default(long), long changes = default(long), string contentsUrl = default(string), long deletions = default(long), string filename = default(string), string htmlUrl = default(string), string previousFilename = default(string), string rawUrl = default(string), string status = default(string))
        {
            this.Additions = additions;
            this.Changes = changes;
            this.ContentsUrl = contentsUrl;
            this.Deletions = deletions;
            this.Filename = filename;
            this.HtmlUrl = htmlUrl;
            this.PreviousFilename = previousFilename;
            this.RawUrl = rawUrl;
            this.Status = status;
        }

        /// <summary>
        /// Gets or Sets Additions
        /// </summary>
        [DataMember(Name = "additions", EmitDefaultValue = false)]
        public long Additions { get; set; }

        /// <summary>
        /// Gets or Sets Changes
        /// </summary>
        [DataMember(Name = "changes", EmitDefaultValue = false)]
        public long Changes { get; set; }

        /// <summary>
        /// Gets or Sets ContentsUrl
        /// </summary>
        [DataMember(Name = "contents_url", EmitDefaultValue = false)]
        public string ContentsUrl { get; set; }

        /// <summary>
        /// Gets or Sets Deletions
        /// </summary>
        [DataMember(Name = "deletions", EmitDefaultValue = false)]
        public long Deletions { get; set; }

        /// <summary>
        /// Gets or Sets Filename
        /// </summary>
        [DataMember(Name = "filename", EmitDefaultValue = false)]
        public string Filename { get; set; }

        /// <summary>
        /// Gets or Sets HtmlUrl
        /// </summary>
        [DataMember(Name = "html_url", EmitDefaultValue = false)]
        public string HtmlUrl { get; set; }

        /// <summary>
        /// Gets or Sets PreviousFilename
        /// </summary>
        [DataMember(Name = "previous_filename", EmitDefaultValue = false)]
        public string PreviousFilename { get; set; }

        /// <summary>
        /// Gets or Sets RawUrl
        /// </summary>
        [DataMember(Name = "raw_url", EmitDefaultValue = false)]
        public string RawUrl { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public string Status { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ChangedFile {\n");
            sb.Append("  Additions: ").Append(Additions).Append("\n");
            sb.Append("  Changes: ").Append(Changes).Append("\n");
            sb.Append("  ContentsUrl: ").Append(ContentsUrl).Append("\n");
            sb.Append("  Deletions: ").Append(Deletions).Append("\n");
            sb.Append("  Filename: ").Append(Filename).Append("\n");
            sb.Append("  HtmlUrl: ").Append(HtmlUrl).Append("\n");
            sb.Append("  PreviousFilename: ").Append(PreviousFilename).Append("\n");
            sb.Append("  RawUrl: ").Append(RawUrl).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
