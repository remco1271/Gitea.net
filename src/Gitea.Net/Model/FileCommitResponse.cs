/*
 * Gitea API
 *
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.22.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Gitea.Net.Client.OpenAPIDateConverter;

namespace Gitea.Net.Model
{
    /// <summary>
    /// FileCommitResponse
    /// </summary>
    [DataContract(Name = "FileCommitResponse")]
    public partial class FileCommitResponse : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="FileCommitResponse" /> class.
        /// </summary>
        /// <param name="author">author.</param>
        /// <param name="committer">committer.</param>
        /// <param name="created">created.</param>
        /// <param name="htmlUrl">htmlUrl.</param>
        /// <param name="message">message.</param>
        /// <param name="parents">parents.</param>
        /// <param name="sha">sha.</param>
        /// <param name="tree">tree.</param>
        /// <param name="url">url.</param>
        public FileCommitResponse(CommitUser author = default(CommitUser), CommitUser committer = default(CommitUser), DateTime created = default(DateTime), string htmlUrl = default(string), string message = default(string), List<CommitMeta> parents = default(List<CommitMeta>), string sha = default(string), CommitMeta tree = default(CommitMeta), string url = default(string))
        {
            this.Author = author;
            this.Committer = committer;
            this.Created = created;
            this.HtmlUrl = htmlUrl;
            this.Message = message;
            this.Parents = parents;
            this.Sha = sha;
            this.Tree = tree;
            this.Url = url;
        }

        /// <summary>
        /// Gets or Sets Author
        /// </summary>
        [DataMember(Name = "author", EmitDefaultValue = false)]
        public CommitUser Author { get; set; }

        /// <summary>
        /// Gets or Sets Committer
        /// </summary>
        [DataMember(Name = "committer", EmitDefaultValue = false)]
        public CommitUser Committer { get; set; }

        /// <summary>
        /// Gets or Sets Created
        /// </summary>
        [DataMember(Name = "created", EmitDefaultValue = false)]
        public DateTime Created { get; set; }

        /// <summary>
        /// Gets or Sets HtmlUrl
        /// </summary>
        [DataMember(Name = "html_url", EmitDefaultValue = false)]
        public string HtmlUrl { get; set; }

        /// <summary>
        /// Gets or Sets Message
        /// </summary>
        [DataMember(Name = "message", EmitDefaultValue = false)]
        public string Message { get; set; }

        /// <summary>
        /// Gets or Sets Parents
        /// </summary>
        [DataMember(Name = "parents", EmitDefaultValue = false)]
        public List<CommitMeta> Parents { get; set; }

        /// <summary>
        /// Gets or Sets Sha
        /// </summary>
        [DataMember(Name = "sha", EmitDefaultValue = false)]
        public string Sha { get; set; }

        /// <summary>
        /// Gets or Sets Tree
        /// </summary>
        [DataMember(Name = "tree", EmitDefaultValue = false)]
        public CommitMeta Tree { get; set; }

        /// <summary>
        /// Gets or Sets Url
        /// </summary>
        [DataMember(Name = "url", EmitDefaultValue = false)]
        public string Url { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class FileCommitResponse {\n");
            sb.Append("  Author: ").Append(Author).Append("\n");
            sb.Append("  Committer: ").Append(Committer).Append("\n");
            sb.Append("  Created: ").Append(Created).Append("\n");
            sb.Append("  HtmlUrl: ").Append(HtmlUrl).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("  Parents: ").Append(Parents).Append("\n");
            sb.Append("  Sha: ").Append(Sha).Append("\n");
            sb.Append("  Tree: ").Append(Tree).Append("\n");
            sb.Append("  Url: ").Append(Url).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
