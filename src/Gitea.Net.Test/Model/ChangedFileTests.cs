/*
 * Gitea API
 *
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.22.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Gitea.Net.Model;
using Gitea.Net.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Gitea.Net.Test.Model
{
    /// <summary>
    ///  Class for testing ChangedFile
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ChangedFileTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ChangedFile
        //private ChangedFile instance;

        public ChangedFileTests()
        {
            // TODO uncomment below to create an instance of ChangedFile
            //instance = new ChangedFile();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ChangedFile
        /// </summary>
        [Fact]
        public void ChangedFileInstanceTest()
        {
            // TODO uncomment below to test "IsType" ChangedFile
            //Assert.IsType<ChangedFile>(instance);
        }

        /// <summary>
        /// Test the property 'Additions'
        /// </summary>
        [Fact]
        public void AdditionsTest()
        {
            // TODO unit test for the property 'Additions'
        }

        /// <summary>
        /// Test the property 'Changes'
        /// </summary>
        [Fact]
        public void ChangesTest()
        {
            // TODO unit test for the property 'Changes'
        }

        /// <summary>
        /// Test the property 'ContentsUrl'
        /// </summary>
        [Fact]
        public void ContentsUrlTest()
        {
            // TODO unit test for the property 'ContentsUrl'
        }

        /// <summary>
        /// Test the property 'Deletions'
        /// </summary>
        [Fact]
        public void DeletionsTest()
        {
            // TODO unit test for the property 'Deletions'
        }

        /// <summary>
        /// Test the property 'Filename'
        /// </summary>
        [Fact]
        public void FilenameTest()
        {
            // TODO unit test for the property 'Filename'
        }

        /// <summary>
        /// Test the property 'HtmlUrl'
        /// </summary>
        [Fact]
        public void HtmlUrlTest()
        {
            // TODO unit test for the property 'HtmlUrl'
        }

        /// <summary>
        /// Test the property 'PreviousFilename'
        /// </summary>
        [Fact]
        public void PreviousFilenameTest()
        {
            // TODO unit test for the property 'PreviousFilename'
        }

        /// <summary>
        /// Test the property 'RawUrl'
        /// </summary>
        [Fact]
        public void RawUrlTest()
        {
            // TODO unit test for the property 'RawUrl'
        }

        /// <summary>
        /// Test the property 'Status'
        /// </summary>
        [Fact]
        public void StatusTest()
        {
            // TODO unit test for the property 'Status'
        }
    }
}
