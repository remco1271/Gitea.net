/*
 * Gitea API
 *
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.22.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Gitea.Net.Model;
using Gitea.Net.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Gitea.Net.Test.Model
{
    /// <summary>
    ///  Class for testing Comment
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class CommentTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Comment
        //private Comment instance;

        public CommentTests()
        {
            // TODO uncomment below to create an instance of Comment
            //instance = new Comment();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Comment
        /// </summary>
        [Fact]
        public void CommentInstanceTest()
        {
            // TODO uncomment below to test "IsType" Comment
            //Assert.IsType<Comment>(instance);
        }

        /// <summary>
        /// Test the property 'Assets'
        /// </summary>
        [Fact]
        public void AssetsTest()
        {
            // TODO unit test for the property 'Assets'
        }

        /// <summary>
        /// Test the property 'Body'
        /// </summary>
        [Fact]
        public void BodyTest()
        {
            // TODO unit test for the property 'Body'
        }

        /// <summary>
        /// Test the property 'CreatedAt'
        /// </summary>
        [Fact]
        public void CreatedAtTest()
        {
            // TODO unit test for the property 'CreatedAt'
        }

        /// <summary>
        /// Test the property 'HtmlUrl'
        /// </summary>
        [Fact]
        public void HtmlUrlTest()
        {
            // TODO unit test for the property 'HtmlUrl'
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }

        /// <summary>
        /// Test the property 'IssueUrl'
        /// </summary>
        [Fact]
        public void IssueUrlTest()
        {
            // TODO unit test for the property 'IssueUrl'
        }

        /// <summary>
        /// Test the property 'OriginalAuthor'
        /// </summary>
        [Fact]
        public void OriginalAuthorTest()
        {
            // TODO unit test for the property 'OriginalAuthor'
        }

        /// <summary>
        /// Test the property 'OriginalAuthorId'
        /// </summary>
        [Fact]
        public void OriginalAuthorIdTest()
        {
            // TODO unit test for the property 'OriginalAuthorId'
        }

        /// <summary>
        /// Test the property 'PullRequestUrl'
        /// </summary>
        [Fact]
        public void PullRequestUrlTest()
        {
            // TODO unit test for the property 'PullRequestUrl'
        }

        /// <summary>
        /// Test the property 'UpdatedAt'
        /// </summary>
        [Fact]
        public void UpdatedAtTest()
        {
            // TODO unit test for the property 'UpdatedAt'
        }

        /// <summary>
        /// Test the property 'User'
        /// </summary>
        [Fact]
        public void UserTest()
        {
            // TODO unit test for the property 'User'
        }
    }
}
