/*
 * Gitea API
 *
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.22.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing PushMirror
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class PushMirrorTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for PushMirror
        //private PushMirror instance;

        public PushMirrorTests()
        {
            // TODO uncomment below to create an instance of PushMirror
            //instance = new PushMirror();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PushMirror
        /// </summary>
        [Fact]
        public void PushMirrorInstanceTest()
        {
            // TODO uncomment below to test "IsType" PushMirror
            //Assert.IsType<PushMirror>(instance);
        }

        /// <summary>
        /// Test the property 'Created'
        /// </summary>
        [Fact]
        public void CreatedTest()
        {
            // TODO unit test for the property 'Created'
        }

        /// <summary>
        /// Test the property 'Interval'
        /// </summary>
        [Fact]
        public void IntervalTest()
        {
            // TODO unit test for the property 'Interval'
        }

        /// <summary>
        /// Test the property 'LastError'
        /// </summary>
        [Fact]
        public void LastErrorTest()
        {
            // TODO unit test for the property 'LastError'
        }

        /// <summary>
        /// Test the property 'LastUpdate'
        /// </summary>
        [Fact]
        public void LastUpdateTest()
        {
            // TODO unit test for the property 'LastUpdate'
        }

        /// <summary>
        /// Test the property 'RemoteAddress'
        /// </summary>
        [Fact]
        public void RemoteAddressTest()
        {
            // TODO unit test for the property 'RemoteAddress'
        }

        /// <summary>
        /// Test the property 'RemoteName'
        /// </summary>
        [Fact]
        public void RemoteNameTest()
        {
            // TODO unit test for the property 'RemoteName'
        }

        /// <summary>
        /// Test the property 'RepoName'
        /// </summary>
        [Fact]
        public void RepoNameTest()
        {
            // TODO unit test for the property 'RepoName'
        }

        /// <summary>
        /// Test the property 'SyncOnCommit'
        /// </summary>
        [Fact]
        public void SyncOnCommitTest()
        {
            // TODO unit test for the property 'SyncOnCommit'
        }
    }
}
