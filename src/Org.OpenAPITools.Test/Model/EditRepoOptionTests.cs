/*
 * Gitea API
 *
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.22.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing EditRepoOption
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class EditRepoOptionTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for EditRepoOption
        //private EditRepoOption instance;

        public EditRepoOptionTests()
        {
            // TODO uncomment below to create an instance of EditRepoOption
            //instance = new EditRepoOption();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of EditRepoOption
        /// </summary>
        [Fact]
        public void EditRepoOptionInstanceTest()
        {
            // TODO uncomment below to test "IsType" EditRepoOption
            //Assert.IsType<EditRepoOption>(instance);
        }

        /// <summary>
        /// Test the property 'AllowFastForwardOnlyMerge'
        /// </summary>
        [Fact]
        public void AllowFastForwardOnlyMergeTest()
        {
            // TODO unit test for the property 'AllowFastForwardOnlyMerge'
        }

        /// <summary>
        /// Test the property 'AllowManualMerge'
        /// </summary>
        [Fact]
        public void AllowManualMergeTest()
        {
            // TODO unit test for the property 'AllowManualMerge'
        }

        /// <summary>
        /// Test the property 'AllowMergeCommits'
        /// </summary>
        [Fact]
        public void AllowMergeCommitsTest()
        {
            // TODO unit test for the property 'AllowMergeCommits'
        }

        /// <summary>
        /// Test the property 'AllowRebase'
        /// </summary>
        [Fact]
        public void AllowRebaseTest()
        {
            // TODO unit test for the property 'AllowRebase'
        }

        /// <summary>
        /// Test the property 'AllowRebaseExplicit'
        /// </summary>
        [Fact]
        public void AllowRebaseExplicitTest()
        {
            // TODO unit test for the property 'AllowRebaseExplicit'
        }

        /// <summary>
        /// Test the property 'AllowRebaseUpdate'
        /// </summary>
        [Fact]
        public void AllowRebaseUpdateTest()
        {
            // TODO unit test for the property 'AllowRebaseUpdate'
        }

        /// <summary>
        /// Test the property 'AllowSquashMerge'
        /// </summary>
        [Fact]
        public void AllowSquashMergeTest()
        {
            // TODO unit test for the property 'AllowSquashMerge'
        }

        /// <summary>
        /// Test the property 'Archived'
        /// </summary>
        [Fact]
        public void ArchivedTest()
        {
            // TODO unit test for the property 'Archived'
        }

        /// <summary>
        /// Test the property 'AutodetectManualMerge'
        /// </summary>
        [Fact]
        public void AutodetectManualMergeTest()
        {
            // TODO unit test for the property 'AutodetectManualMerge'
        }

        /// <summary>
        /// Test the property 'DefaultAllowMaintainerEdit'
        /// </summary>
        [Fact]
        public void DefaultAllowMaintainerEditTest()
        {
            // TODO unit test for the property 'DefaultAllowMaintainerEdit'
        }

        /// <summary>
        /// Test the property 'DefaultBranch'
        /// </summary>
        [Fact]
        public void DefaultBranchTest()
        {
            // TODO unit test for the property 'DefaultBranch'
        }

        /// <summary>
        /// Test the property 'DefaultDeleteBranchAfterMerge'
        /// </summary>
        [Fact]
        public void DefaultDeleteBranchAfterMergeTest()
        {
            // TODO unit test for the property 'DefaultDeleteBranchAfterMerge'
        }

        /// <summary>
        /// Test the property 'DefaultMergeStyle'
        /// </summary>
        [Fact]
        public void DefaultMergeStyleTest()
        {
            // TODO unit test for the property 'DefaultMergeStyle'
        }

        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Fact]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }

        /// <summary>
        /// Test the property 'EnablePrune'
        /// </summary>
        [Fact]
        public void EnablePruneTest()
        {
            // TODO unit test for the property 'EnablePrune'
        }

        /// <summary>
        /// Test the property 'ExternalTracker'
        /// </summary>
        [Fact]
        public void ExternalTrackerTest()
        {
            // TODO unit test for the property 'ExternalTracker'
        }

        /// <summary>
        /// Test the property 'ExternalWiki'
        /// </summary>
        [Fact]
        public void ExternalWikiTest()
        {
            // TODO unit test for the property 'ExternalWiki'
        }

        /// <summary>
        /// Test the property 'HasActions'
        /// </summary>
        [Fact]
        public void HasActionsTest()
        {
            // TODO unit test for the property 'HasActions'
        }

        /// <summary>
        /// Test the property 'HasIssues'
        /// </summary>
        [Fact]
        public void HasIssuesTest()
        {
            // TODO unit test for the property 'HasIssues'
        }

        /// <summary>
        /// Test the property 'HasPackages'
        /// </summary>
        [Fact]
        public void HasPackagesTest()
        {
            // TODO unit test for the property 'HasPackages'
        }

        /// <summary>
        /// Test the property 'HasProjects'
        /// </summary>
        [Fact]
        public void HasProjectsTest()
        {
            // TODO unit test for the property 'HasProjects'
        }

        /// <summary>
        /// Test the property 'HasPullRequests'
        /// </summary>
        [Fact]
        public void HasPullRequestsTest()
        {
            // TODO unit test for the property 'HasPullRequests'
        }

        /// <summary>
        /// Test the property 'HasReleases'
        /// </summary>
        [Fact]
        public void HasReleasesTest()
        {
            // TODO unit test for the property 'HasReleases'
        }

        /// <summary>
        /// Test the property 'HasWiki'
        /// </summary>
        [Fact]
        public void HasWikiTest()
        {
            // TODO unit test for the property 'HasWiki'
        }

        /// <summary>
        /// Test the property 'IgnoreWhitespaceConflicts'
        /// </summary>
        [Fact]
        public void IgnoreWhitespaceConflictsTest()
        {
            // TODO unit test for the property 'IgnoreWhitespaceConflicts'
        }

        /// <summary>
        /// Test the property 'InternalTracker'
        /// </summary>
        [Fact]
        public void InternalTrackerTest()
        {
            // TODO unit test for the property 'InternalTracker'
        }

        /// <summary>
        /// Test the property 'MirrorInterval'
        /// </summary>
        [Fact]
        public void MirrorIntervalTest()
        {
            // TODO unit test for the property 'MirrorInterval'
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'Private'
        /// </summary>
        [Fact]
        public void PrivateTest()
        {
            // TODO unit test for the property 'Private'
        }

        /// <summary>
        /// Test the property 'ProjectsMode'
        /// </summary>
        [Fact]
        public void ProjectsModeTest()
        {
            // TODO unit test for the property 'ProjectsMode'
        }

        /// <summary>
        /// Test the property 'Template'
        /// </summary>
        [Fact]
        public void TemplateTest()
        {
            // TODO unit test for the property 'Template'
        }

        /// <summary>
        /// Test the property 'Website'
        /// </summary>
        [Fact]
        public void WebsiteTest()
        {
            // TODO unit test for the property 'Website'
        }
    }
}
