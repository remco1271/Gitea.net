/*
 * Gitea API
 *
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.22.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing GPGKey
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class GPGKeyTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for GPGKey
        //private GPGKey instance;

        public GPGKeyTests()
        {
            // TODO uncomment below to create an instance of GPGKey
            //instance = new GPGKey();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of GPGKey
        /// </summary>
        [Fact]
        public void GPGKeyInstanceTest()
        {
            // TODO uncomment below to test "IsType" GPGKey
            //Assert.IsType<GPGKey>(instance);
        }

        /// <summary>
        /// Test the property 'CanCertify'
        /// </summary>
        [Fact]
        public void CanCertifyTest()
        {
            // TODO unit test for the property 'CanCertify'
        }

        /// <summary>
        /// Test the property 'CanEncryptComms'
        /// </summary>
        [Fact]
        public void CanEncryptCommsTest()
        {
            // TODO unit test for the property 'CanEncryptComms'
        }

        /// <summary>
        /// Test the property 'CanEncryptStorage'
        /// </summary>
        [Fact]
        public void CanEncryptStorageTest()
        {
            // TODO unit test for the property 'CanEncryptStorage'
        }

        /// <summary>
        /// Test the property 'CanSign'
        /// </summary>
        [Fact]
        public void CanSignTest()
        {
            // TODO unit test for the property 'CanSign'
        }

        /// <summary>
        /// Test the property 'CreatedAt'
        /// </summary>
        [Fact]
        public void CreatedAtTest()
        {
            // TODO unit test for the property 'CreatedAt'
        }

        /// <summary>
        /// Test the property 'Emails'
        /// </summary>
        [Fact]
        public void EmailsTest()
        {
            // TODO unit test for the property 'Emails'
        }

        /// <summary>
        /// Test the property 'ExpiresAt'
        /// </summary>
        [Fact]
        public void ExpiresAtTest()
        {
            // TODO unit test for the property 'ExpiresAt'
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }

        /// <summary>
        /// Test the property 'KeyId'
        /// </summary>
        [Fact]
        public void KeyIdTest()
        {
            // TODO unit test for the property 'KeyId'
        }

        /// <summary>
        /// Test the property 'PrimaryKeyId'
        /// </summary>
        [Fact]
        public void PrimaryKeyIdTest()
        {
            // TODO unit test for the property 'PrimaryKeyId'
        }

        /// <summary>
        /// Test the property 'PublicKey'
        /// </summary>
        [Fact]
        public void PublicKeyTest()
        {
            // TODO unit test for the property 'PublicKey'
        }

        /// <summary>
        /// Test the property 'Subkeys'
        /// </summary>
        [Fact]
        public void SubkeysTest()
        {
            // TODO unit test for the property 'Subkeys'
        }

        /// <summary>
        /// Test the property 'Verified'
        /// </summary>
        [Fact]
        public void VerifiedTest()
        {
            // TODO unit test for the property 'Verified'
        }
    }
}
