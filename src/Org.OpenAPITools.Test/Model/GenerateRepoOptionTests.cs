/*
 * Gitea API
 *
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.22.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing GenerateRepoOption
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class GenerateRepoOptionTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for GenerateRepoOption
        //private GenerateRepoOption instance;

        public GenerateRepoOptionTests()
        {
            // TODO uncomment below to create an instance of GenerateRepoOption
            //instance = new GenerateRepoOption();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of GenerateRepoOption
        /// </summary>
        [Fact]
        public void GenerateRepoOptionInstanceTest()
        {
            // TODO uncomment below to test "IsType" GenerateRepoOption
            //Assert.IsType<GenerateRepoOption>(instance);
        }

        /// <summary>
        /// Test the property 'Avatar'
        /// </summary>
        [Fact]
        public void AvatarTest()
        {
            // TODO unit test for the property 'Avatar'
        }

        /// <summary>
        /// Test the property 'DefaultBranch'
        /// </summary>
        [Fact]
        public void DefaultBranchTest()
        {
            // TODO unit test for the property 'DefaultBranch'
        }

        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Fact]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }

        /// <summary>
        /// Test the property 'GitContent'
        /// </summary>
        [Fact]
        public void GitContentTest()
        {
            // TODO unit test for the property 'GitContent'
        }

        /// <summary>
        /// Test the property 'GitHooks'
        /// </summary>
        [Fact]
        public void GitHooksTest()
        {
            // TODO unit test for the property 'GitHooks'
        }

        /// <summary>
        /// Test the property 'Labels'
        /// </summary>
        [Fact]
        public void LabelsTest()
        {
            // TODO unit test for the property 'Labels'
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'Owner'
        /// </summary>
        [Fact]
        public void OwnerTest()
        {
            // TODO unit test for the property 'Owner'
        }

        /// <summary>
        /// Test the property 'Private'
        /// </summary>
        [Fact]
        public void PrivateTest()
        {
            // TODO unit test for the property 'Private'
        }

        /// <summary>
        /// Test the property 'ProtectedBranch'
        /// </summary>
        [Fact]
        public void ProtectedBranchTest()
        {
            // TODO unit test for the property 'ProtectedBranch'
        }

        /// <summary>
        /// Test the property 'Topics'
        /// </summary>
        [Fact]
        public void TopicsTest()
        {
            // TODO unit test for the property 'Topics'
        }

        /// <summary>
        /// Test the property 'Webhooks'
        /// </summary>
        [Fact]
        public void WebhooksTest()
        {
            // TODO unit test for the property 'Webhooks'
        }
    }
}
