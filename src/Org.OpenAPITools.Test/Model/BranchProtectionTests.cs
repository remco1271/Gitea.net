/*
 * Gitea API
 *
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.22.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing BranchProtection
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class BranchProtectionTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for BranchProtection
        //private BranchProtection instance;

        public BranchProtectionTests()
        {
            // TODO uncomment below to create an instance of BranchProtection
            //instance = new BranchProtection();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of BranchProtection
        /// </summary>
        [Fact]
        public void BranchProtectionInstanceTest()
        {
            // TODO uncomment below to test "IsType" BranchProtection
            //Assert.IsType<BranchProtection>(instance);
        }

        /// <summary>
        /// Test the property 'ApprovalsWhitelistTeams'
        /// </summary>
        [Fact]
        public void ApprovalsWhitelistTeamsTest()
        {
            // TODO unit test for the property 'ApprovalsWhitelistTeams'
        }

        /// <summary>
        /// Test the property 'ApprovalsWhitelistUsername'
        /// </summary>
        [Fact]
        public void ApprovalsWhitelistUsernameTest()
        {
            // TODO unit test for the property 'ApprovalsWhitelistUsername'
        }

        /// <summary>
        /// Test the property 'BlockOnOfficialReviewRequests'
        /// </summary>
        [Fact]
        public void BlockOnOfficialReviewRequestsTest()
        {
            // TODO unit test for the property 'BlockOnOfficialReviewRequests'
        }

        /// <summary>
        /// Test the property 'BlockOnOutdatedBranch'
        /// </summary>
        [Fact]
        public void BlockOnOutdatedBranchTest()
        {
            // TODO unit test for the property 'BlockOnOutdatedBranch'
        }

        /// <summary>
        /// Test the property 'BlockOnRejectedReviews'
        /// </summary>
        [Fact]
        public void BlockOnRejectedReviewsTest()
        {
            // TODO unit test for the property 'BlockOnRejectedReviews'
        }

        /// <summary>
        /// Test the property 'BranchName'
        /// </summary>
        [Fact]
        public void BranchNameTest()
        {
            // TODO unit test for the property 'BranchName'
        }

        /// <summary>
        /// Test the property 'CreatedAt'
        /// </summary>
        [Fact]
        public void CreatedAtTest()
        {
            // TODO unit test for the property 'CreatedAt'
        }

        /// <summary>
        /// Test the property 'DismissStaleApprovals'
        /// </summary>
        [Fact]
        public void DismissStaleApprovalsTest()
        {
            // TODO unit test for the property 'DismissStaleApprovals'
        }

        /// <summary>
        /// Test the property 'EnableApprovalsWhitelist'
        /// </summary>
        [Fact]
        public void EnableApprovalsWhitelistTest()
        {
            // TODO unit test for the property 'EnableApprovalsWhitelist'
        }

        /// <summary>
        /// Test the property 'EnableMergeWhitelist'
        /// </summary>
        [Fact]
        public void EnableMergeWhitelistTest()
        {
            // TODO unit test for the property 'EnableMergeWhitelist'
        }

        /// <summary>
        /// Test the property 'EnablePush'
        /// </summary>
        [Fact]
        public void EnablePushTest()
        {
            // TODO unit test for the property 'EnablePush'
        }

        /// <summary>
        /// Test the property 'EnablePushWhitelist'
        /// </summary>
        [Fact]
        public void EnablePushWhitelistTest()
        {
            // TODO unit test for the property 'EnablePushWhitelist'
        }

        /// <summary>
        /// Test the property 'EnableStatusCheck'
        /// </summary>
        [Fact]
        public void EnableStatusCheckTest()
        {
            // TODO unit test for the property 'EnableStatusCheck'
        }

        /// <summary>
        /// Test the property 'IgnoreStaleApprovals'
        /// </summary>
        [Fact]
        public void IgnoreStaleApprovalsTest()
        {
            // TODO unit test for the property 'IgnoreStaleApprovals'
        }

        /// <summary>
        /// Test the property 'MergeWhitelistTeams'
        /// </summary>
        [Fact]
        public void MergeWhitelistTeamsTest()
        {
            // TODO unit test for the property 'MergeWhitelistTeams'
        }

        /// <summary>
        /// Test the property 'MergeWhitelistUsernames'
        /// </summary>
        [Fact]
        public void MergeWhitelistUsernamesTest()
        {
            // TODO unit test for the property 'MergeWhitelistUsernames'
        }

        /// <summary>
        /// Test the property 'ProtectedFilePatterns'
        /// </summary>
        [Fact]
        public void ProtectedFilePatternsTest()
        {
            // TODO unit test for the property 'ProtectedFilePatterns'
        }

        /// <summary>
        /// Test the property 'PushWhitelistDeployKeys'
        /// </summary>
        [Fact]
        public void PushWhitelistDeployKeysTest()
        {
            // TODO unit test for the property 'PushWhitelistDeployKeys'
        }

        /// <summary>
        /// Test the property 'PushWhitelistTeams'
        /// </summary>
        [Fact]
        public void PushWhitelistTeamsTest()
        {
            // TODO unit test for the property 'PushWhitelistTeams'
        }

        /// <summary>
        /// Test the property 'PushWhitelistUsernames'
        /// </summary>
        [Fact]
        public void PushWhitelistUsernamesTest()
        {
            // TODO unit test for the property 'PushWhitelistUsernames'
        }

        /// <summary>
        /// Test the property 'RequireSignedCommits'
        /// </summary>
        [Fact]
        public void RequireSignedCommitsTest()
        {
            // TODO unit test for the property 'RequireSignedCommits'
        }

        /// <summary>
        /// Test the property 'RequiredApprovals'
        /// </summary>
        [Fact]
        public void RequiredApprovalsTest()
        {
            // TODO unit test for the property 'RequiredApprovals'
        }

        /// <summary>
        /// Test the property 'RuleName'
        /// </summary>
        [Fact]
        public void RuleNameTest()
        {
            // TODO unit test for the property 'RuleName'
        }

        /// <summary>
        /// Test the property 'StatusCheckContexts'
        /// </summary>
        [Fact]
        public void StatusCheckContextsTest()
        {
            // TODO unit test for the property 'StatusCheckContexts'
        }

        /// <summary>
        /// Test the property 'UnprotectedFilePatterns'
        /// </summary>
        [Fact]
        public void UnprotectedFilePatternsTest()
        {
            // TODO unit test for the property 'UnprotectedFilePatterns'
        }

        /// <summary>
        /// Test the property 'UpdatedAt'
        /// </summary>
        [Fact]
        public void UpdatedAtTest()
        {
            // TODO unit test for the property 'UpdatedAt'
        }
    }
}
