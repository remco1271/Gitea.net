/*
 * Gitea API
 *
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.22.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing MigrateRepoOptions
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class MigrateRepoOptionsTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for MigrateRepoOptions
        //private MigrateRepoOptions instance;

        public MigrateRepoOptionsTests()
        {
            // TODO uncomment below to create an instance of MigrateRepoOptions
            //instance = new MigrateRepoOptions();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of MigrateRepoOptions
        /// </summary>
        [Fact]
        public void MigrateRepoOptionsInstanceTest()
        {
            // TODO uncomment below to test "IsType" MigrateRepoOptions
            //Assert.IsType<MigrateRepoOptions>(instance);
        }

        /// <summary>
        /// Test the property 'AuthPassword'
        /// </summary>
        [Fact]
        public void AuthPasswordTest()
        {
            // TODO unit test for the property 'AuthPassword'
        }

        /// <summary>
        /// Test the property 'AuthToken'
        /// </summary>
        [Fact]
        public void AuthTokenTest()
        {
            // TODO unit test for the property 'AuthToken'
        }

        /// <summary>
        /// Test the property 'AuthUsername'
        /// </summary>
        [Fact]
        public void AuthUsernameTest()
        {
            // TODO unit test for the property 'AuthUsername'
        }

        /// <summary>
        /// Test the property 'CloneAddr'
        /// </summary>
        [Fact]
        public void CloneAddrTest()
        {
            // TODO unit test for the property 'CloneAddr'
        }

        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Fact]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }

        /// <summary>
        /// Test the property 'Issues'
        /// </summary>
        [Fact]
        public void IssuesTest()
        {
            // TODO unit test for the property 'Issues'
        }

        /// <summary>
        /// Test the property 'Labels'
        /// </summary>
        [Fact]
        public void LabelsTest()
        {
            // TODO unit test for the property 'Labels'
        }

        /// <summary>
        /// Test the property 'Lfs'
        /// </summary>
        [Fact]
        public void LfsTest()
        {
            // TODO unit test for the property 'Lfs'
        }

        /// <summary>
        /// Test the property 'LfsEndpoint'
        /// </summary>
        [Fact]
        public void LfsEndpointTest()
        {
            // TODO unit test for the property 'LfsEndpoint'
        }

        /// <summary>
        /// Test the property 'Milestones'
        /// </summary>
        [Fact]
        public void MilestonesTest()
        {
            // TODO unit test for the property 'Milestones'
        }

        /// <summary>
        /// Test the property 'Mirror'
        /// </summary>
        [Fact]
        public void MirrorTest()
        {
            // TODO unit test for the property 'Mirror'
        }

        /// <summary>
        /// Test the property 'MirrorInterval'
        /// </summary>
        [Fact]
        public void MirrorIntervalTest()
        {
            // TODO unit test for the property 'MirrorInterval'
        }

        /// <summary>
        /// Test the property 'Private'
        /// </summary>
        [Fact]
        public void PrivateTest()
        {
            // TODO unit test for the property 'Private'
        }

        /// <summary>
        /// Test the property 'PullRequests'
        /// </summary>
        [Fact]
        public void PullRequestsTest()
        {
            // TODO unit test for the property 'PullRequests'
        }

        /// <summary>
        /// Test the property 'Releases'
        /// </summary>
        [Fact]
        public void ReleasesTest()
        {
            // TODO unit test for the property 'Releases'
        }

        /// <summary>
        /// Test the property 'RepoName'
        /// </summary>
        [Fact]
        public void RepoNameTest()
        {
            // TODO unit test for the property 'RepoName'
        }

        /// <summary>
        /// Test the property 'RepoOwner'
        /// </summary>
        [Fact]
        public void RepoOwnerTest()
        {
            // TODO unit test for the property 'RepoOwner'
        }

        /// <summary>
        /// Test the property 'Service'
        /// </summary>
        [Fact]
        public void ServiceTest()
        {
            // TODO unit test for the property 'Service'
        }

        /// <summary>
        /// Test the property 'Uid'
        /// </summary>
        [Fact]
        public void UidTest()
        {
            // TODO unit test for the property 'Uid'
        }

        /// <summary>
        /// Test the property 'Wiki'
        /// </summary>
        [Fact]
        public void WikiTest()
        {
            // TODO unit test for the property 'Wiki'
        }
    }
}
