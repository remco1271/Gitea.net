/*
 * Gitea API
 *
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.22.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// TimelineComment represents a timeline comment (comment of any type) on a commit or issue
    /// </summary>
    [DataContract(Name = "TimelineComment")]
    public partial class TimelineComment : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TimelineComment" /> class.
        /// </summary>
        /// <param name="assignee">assignee.</param>
        /// <param name="assigneeTeam">assigneeTeam.</param>
        /// <param name="body">body.</param>
        /// <param name="createdAt">createdAt.</param>
        /// <param name="dependentIssue">dependentIssue.</param>
        /// <param name="htmlUrl">htmlUrl.</param>
        /// <param name="id">id.</param>
        /// <param name="issueUrl">issueUrl.</param>
        /// <param name="label">label.</param>
        /// <param name="milestone">milestone.</param>
        /// <param name="newRef">newRef.</param>
        /// <param name="newTitle">newTitle.</param>
        /// <param name="oldMilestone">oldMilestone.</param>
        /// <param name="oldProjectId">oldProjectId.</param>
        /// <param name="oldRef">oldRef.</param>
        /// <param name="oldTitle">oldTitle.</param>
        /// <param name="projectId">projectId.</param>
        /// <param name="pullRequestUrl">pullRequestUrl.</param>
        /// <param name="refAction">refAction.</param>
        /// <param name="refComment">refComment.</param>
        /// <param name="refCommitSha">commit SHA where issue/PR was referenced.</param>
        /// <param name="refIssue">refIssue.</param>
        /// <param name="removedAssignee">whether the assignees were removed or added.</param>
        /// <param name="resolveDoer">resolveDoer.</param>
        /// <param name="reviewId">reviewId.</param>
        /// <param name="trackedTime">trackedTime.</param>
        /// <param name="type">type.</param>
        /// <param name="updatedAt">updatedAt.</param>
        /// <param name="user">user.</param>
        public TimelineComment(User assignee = default(User), Team assigneeTeam = default(Team), string body = default(string), DateTime createdAt = default(DateTime), Issue dependentIssue = default(Issue), string htmlUrl = default(string), long id = default(long), string issueUrl = default(string), Label label = default(Label), Milestone milestone = default(Milestone), string newRef = default(string), string newTitle = default(string), Milestone oldMilestone = default(Milestone), long oldProjectId = default(long), string oldRef = default(string), string oldTitle = default(string), long projectId = default(long), string pullRequestUrl = default(string), string refAction = default(string), Comment refComment = default(Comment), string refCommitSha = default(string), Issue refIssue = default(Issue), bool removedAssignee = default(bool), User resolveDoer = default(User), long reviewId = default(long), TrackedTime trackedTime = default(TrackedTime), string type = default(string), DateTime updatedAt = default(DateTime), User user = default(User))
        {
            this.Assignee = assignee;
            this.AssigneeTeam = assigneeTeam;
            this.Body = body;
            this.CreatedAt = createdAt;
            this.DependentIssue = dependentIssue;
            this.HtmlUrl = htmlUrl;
            this.Id = id;
            this.IssueUrl = issueUrl;
            this.Label = label;
            this.Milestone = milestone;
            this.NewRef = newRef;
            this.NewTitle = newTitle;
            this.OldMilestone = oldMilestone;
            this.OldProjectId = oldProjectId;
            this.OldRef = oldRef;
            this.OldTitle = oldTitle;
            this.ProjectId = projectId;
            this.PullRequestUrl = pullRequestUrl;
            this.RefAction = refAction;
            this.RefComment = refComment;
            this.RefCommitSha = refCommitSha;
            this.RefIssue = refIssue;
            this.RemovedAssignee = removedAssignee;
            this.ResolveDoer = resolveDoer;
            this.ReviewId = reviewId;
            this.TrackedTime = trackedTime;
            this.Type = type;
            this.UpdatedAt = updatedAt;
            this.User = user;
        }

        /// <summary>
        /// Gets or Sets Assignee
        /// </summary>
        [DataMember(Name = "assignee", EmitDefaultValue = false)]
        public User Assignee { get; set; }

        /// <summary>
        /// Gets or Sets AssigneeTeam
        /// </summary>
        [DataMember(Name = "assignee_team", EmitDefaultValue = false)]
        public Team AssigneeTeam { get; set; }

        /// <summary>
        /// Gets or Sets Body
        /// </summary>
        [DataMember(Name = "body", EmitDefaultValue = false)]
        public string Body { get; set; }

        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        [DataMember(Name = "created_at", EmitDefaultValue = false)]
        public DateTime CreatedAt { get; set; }

        /// <summary>
        /// Gets or Sets DependentIssue
        /// </summary>
        [DataMember(Name = "dependent_issue", EmitDefaultValue = false)]
        public Issue DependentIssue { get; set; }

        /// <summary>
        /// Gets or Sets HtmlUrl
        /// </summary>
        [DataMember(Name = "html_url", EmitDefaultValue = false)]
        public string HtmlUrl { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public long Id { get; set; }

        /// <summary>
        /// Gets or Sets IssueUrl
        /// </summary>
        [DataMember(Name = "issue_url", EmitDefaultValue = false)]
        public string IssueUrl { get; set; }

        /// <summary>
        /// Gets or Sets Label
        /// </summary>
        [DataMember(Name = "label", EmitDefaultValue = false)]
        public Label Label { get; set; }

        /// <summary>
        /// Gets or Sets Milestone
        /// </summary>
        [DataMember(Name = "milestone", EmitDefaultValue = false)]
        public Milestone Milestone { get; set; }

        /// <summary>
        /// Gets or Sets NewRef
        /// </summary>
        [DataMember(Name = "new_ref", EmitDefaultValue = false)]
        public string NewRef { get; set; }

        /// <summary>
        /// Gets or Sets NewTitle
        /// </summary>
        [DataMember(Name = "new_title", EmitDefaultValue = false)]
        public string NewTitle { get; set; }

        /// <summary>
        /// Gets or Sets OldMilestone
        /// </summary>
        [DataMember(Name = "old_milestone", EmitDefaultValue = false)]
        public Milestone OldMilestone { get; set; }

        /// <summary>
        /// Gets or Sets OldProjectId
        /// </summary>
        [DataMember(Name = "old_project_id", EmitDefaultValue = false)]
        public long OldProjectId { get; set; }

        /// <summary>
        /// Gets or Sets OldRef
        /// </summary>
        [DataMember(Name = "old_ref", EmitDefaultValue = false)]
        public string OldRef { get; set; }

        /// <summary>
        /// Gets or Sets OldTitle
        /// </summary>
        [DataMember(Name = "old_title", EmitDefaultValue = false)]
        public string OldTitle { get; set; }

        /// <summary>
        /// Gets or Sets ProjectId
        /// </summary>
        [DataMember(Name = "project_id", EmitDefaultValue = false)]
        public long ProjectId { get; set; }

        /// <summary>
        /// Gets or Sets PullRequestUrl
        /// </summary>
        [DataMember(Name = "pull_request_url", EmitDefaultValue = false)]
        public string PullRequestUrl { get; set; }

        /// <summary>
        /// Gets or Sets RefAction
        /// </summary>
        [DataMember(Name = "ref_action", EmitDefaultValue = false)]
        public string RefAction { get; set; }

        /// <summary>
        /// Gets or Sets RefComment
        /// </summary>
        [DataMember(Name = "ref_comment", EmitDefaultValue = false)]
        public Comment RefComment { get; set; }

        /// <summary>
        /// commit SHA where issue/PR was referenced
        /// </summary>
        /// <value>commit SHA where issue/PR was referenced</value>
        [DataMember(Name = "ref_commit_sha", EmitDefaultValue = false)]
        public string RefCommitSha { get; set; }

        /// <summary>
        /// Gets or Sets RefIssue
        /// </summary>
        [DataMember(Name = "ref_issue", EmitDefaultValue = false)]
        public Issue RefIssue { get; set; }

        /// <summary>
        /// whether the assignees were removed or added
        /// </summary>
        /// <value>whether the assignees were removed or added</value>
        [DataMember(Name = "removed_assignee", EmitDefaultValue = true)]
        public bool RemovedAssignee { get; set; }

        /// <summary>
        /// Gets or Sets ResolveDoer
        /// </summary>
        [DataMember(Name = "resolve_doer", EmitDefaultValue = false)]
        public User ResolveDoer { get; set; }

        /// <summary>
        /// Gets or Sets ReviewId
        /// </summary>
        [DataMember(Name = "review_id", EmitDefaultValue = false)]
        public long ReviewId { get; set; }

        /// <summary>
        /// Gets or Sets TrackedTime
        /// </summary>
        [DataMember(Name = "tracked_time", EmitDefaultValue = false)]
        public TrackedTime TrackedTime { get; set; }

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name = "type", EmitDefaultValue = false)]
        public string Type { get; set; }

        /// <summary>
        /// Gets or Sets UpdatedAt
        /// </summary>
        [DataMember(Name = "updated_at", EmitDefaultValue = false)]
        public DateTime UpdatedAt { get; set; }

        /// <summary>
        /// Gets or Sets User
        /// </summary>
        [DataMember(Name = "user", EmitDefaultValue = false)]
        public User User { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class TimelineComment {\n");
            sb.Append("  Assignee: ").Append(Assignee).Append("\n");
            sb.Append("  AssigneeTeam: ").Append(AssigneeTeam).Append("\n");
            sb.Append("  Body: ").Append(Body).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  DependentIssue: ").Append(DependentIssue).Append("\n");
            sb.Append("  HtmlUrl: ").Append(HtmlUrl).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  IssueUrl: ").Append(IssueUrl).Append("\n");
            sb.Append("  Label: ").Append(Label).Append("\n");
            sb.Append("  Milestone: ").Append(Milestone).Append("\n");
            sb.Append("  NewRef: ").Append(NewRef).Append("\n");
            sb.Append("  NewTitle: ").Append(NewTitle).Append("\n");
            sb.Append("  OldMilestone: ").Append(OldMilestone).Append("\n");
            sb.Append("  OldProjectId: ").Append(OldProjectId).Append("\n");
            sb.Append("  OldRef: ").Append(OldRef).Append("\n");
            sb.Append("  OldTitle: ").Append(OldTitle).Append("\n");
            sb.Append("  ProjectId: ").Append(ProjectId).Append("\n");
            sb.Append("  PullRequestUrl: ").Append(PullRequestUrl).Append("\n");
            sb.Append("  RefAction: ").Append(RefAction).Append("\n");
            sb.Append("  RefComment: ").Append(RefComment).Append("\n");
            sb.Append("  RefCommitSha: ").Append(RefCommitSha).Append("\n");
            sb.Append("  RefIssue: ").Append(RefIssue).Append("\n");
            sb.Append("  RemovedAssignee: ").Append(RemovedAssignee).Append("\n");
            sb.Append("  ResolveDoer: ").Append(ResolveDoer).Append("\n");
            sb.Append("  ReviewId: ").Append(ReviewId).Append("\n");
            sb.Append("  TrackedTime: ").Append(TrackedTime).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  UpdatedAt: ").Append(UpdatedAt).Append("\n");
            sb.Append("  User: ").Append(User).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
