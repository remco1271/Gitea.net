/*
 * Gitea API
 *
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.22.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Compare
    /// </summary>
    [DataContract(Name = "Compare")]
    public partial class Compare : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Compare" /> class.
        /// </summary>
        /// <param name="commits">commits.</param>
        /// <param name="totalCommits">totalCommits.</param>
        public Compare(List<Commit> commits = default(List<Commit>), long totalCommits = default(long))
        {
            this.Commits = commits;
            this.TotalCommits = totalCommits;
        }

        /// <summary>
        /// Gets or Sets Commits
        /// </summary>
        [DataMember(Name = "commits", EmitDefaultValue = false)]
        public List<Commit> Commits { get; set; }

        /// <summary>
        /// Gets or Sets TotalCommits
        /// </summary>
        [DataMember(Name = "total_commits", EmitDefaultValue = false)]
        public long TotalCommits { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Compare {\n");
            sb.Append("  Commits: ").Append(Commits).Append("\n");
            sb.Append("  TotalCommits: ").Append(TotalCommits).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
