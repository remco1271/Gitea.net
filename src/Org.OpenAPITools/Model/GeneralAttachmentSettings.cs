/*
 * Gitea API
 *
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.22.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// GeneralAttachmentSettings contains global Attachment settings exposed by API
    /// </summary>
    [DataContract(Name = "GeneralAttachmentSettings")]
    public partial class GeneralAttachmentSettings : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GeneralAttachmentSettings" /> class.
        /// </summary>
        /// <param name="allowedTypes">allowedTypes.</param>
        /// <param name="enabled">enabled.</param>
        /// <param name="maxFiles">maxFiles.</param>
        /// <param name="maxSize">maxSize.</param>
        public GeneralAttachmentSettings(string allowedTypes = default(string), bool enabled = default(bool), long maxFiles = default(long), long maxSize = default(long))
        {
            this.AllowedTypes = allowedTypes;
            this.Enabled = enabled;
            this.MaxFiles = maxFiles;
            this.MaxSize = maxSize;
        }

        /// <summary>
        /// Gets or Sets AllowedTypes
        /// </summary>
        [DataMember(Name = "allowed_types", EmitDefaultValue = false)]
        public string AllowedTypes { get; set; }

        /// <summary>
        /// Gets or Sets Enabled
        /// </summary>
        [DataMember(Name = "enabled", EmitDefaultValue = true)]
        public bool Enabled { get; set; }

        /// <summary>
        /// Gets or Sets MaxFiles
        /// </summary>
        [DataMember(Name = "max_files", EmitDefaultValue = false)]
        public long MaxFiles { get; set; }

        /// <summary>
        /// Gets or Sets MaxSize
        /// </summary>
        [DataMember(Name = "max_size", EmitDefaultValue = false)]
        public long MaxSize { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GeneralAttachmentSettings {\n");
            sb.Append("  AllowedTypes: ").Append(AllowedTypes).Append("\n");
            sb.Append("  Enabled: ").Append(Enabled).Append("\n");
            sb.Append("  MaxFiles: ").Append(MaxFiles).Append("\n");
            sb.Append("  MaxSize: ").Append(MaxSize).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
